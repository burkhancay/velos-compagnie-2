{"ast":null,"code":"import { ADD_TO_CART, REMOVE_FROM_CART, SET_PAGE_INDEX, GET_PRODUCTS_PENDING, GET_PRODUCTS_SUCCESS, GET_PRODUCTS_FAILURE, UPDATE_CART, CHECKOUT, SET_DELIVERY_CHOICE } from \"./actionTypes\";\nimport { getProducts, addOrder } from \"../../service/index\";\n\nconst returnProductsArrays = items => {\n  let TwoDimensionalArray = [];\n  let remainder = items.length % 9;\n  let i = 0;\n\n  while (i < items.length - remainder) {\n    let array = items.slice(i, i + 9);\n    TwoDimensionalArray.push(array);\n    i += 9;\n  }\n\n  const array = items.slice(i);\n  TwoDimensionalArray.push(array);\n  return TwoDimensionalArray;\n};\n\nexport function getProductsPending() {\n  return {\n    type: GET_PRODUCTS_PENDING\n  };\n}\nexport function getProductsSuccess(data) {\n  return {\n    type: GET_PRODUCTS_SUCCESS,\n    payload: {\n      data\n    }\n  };\n}\nexport function getProductsFailure(error) {\n  return {\n    type: GET_PRODUCTS_FAILURE,\n    payload: {\n      error\n    }\n  };\n}\nexport function addToCart(product) {\n  return {\n    type: ADD_TO_CART,\n    payload: {\n      product\n    }\n  };\n}\nexport function updateCart(id, quantity) {\n  return {\n    type: UPDATE_CART,\n    payload: {\n      id,\n      quantity\n    }\n  };\n}\nexport function setDelivery(choice) {\n  return {\n    type: SET_DELIVERY_CHOICE,\n    payload: {\n      choice\n    }\n  };\n}\nexport function removeFromCart(id) {\n  return {\n    type: REMOVE_FROM_CART,\n    payload: {\n      id\n    }\n  };\n}\nexport function checkout() {\n  return {\n    type: CHECKOUT\n  };\n}\nexport function setPage(index) {\n  return {\n    type: SET_PAGE_INDEX,\n    payload: {\n      index\n    }\n  };\n} // Networking - MongoDB\n\nexport const fetchProducts = () => {\n  return async function (dispatch) {\n    dispatch(getProductsPending);\n    getProducts().then(response => returnProductsArrays(response.data)).then(productsData => dispatch(getProductsSuccess(productsData))).catch(err => dispatch(getProductsFailure(err)));\n  };\n};\nexport const saveOrder = order => {\n  return async function (dispatch) {\n    addOrder(order).then(() => dispatch(checkout())).catch(err => console.log(err));\n  };\n};","map":{"version":3,"sources":["C:/Users/BRKHNCY/Desktop/velos/client/src/lib/state/actions/index.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","SET_PAGE_INDEX","GET_PRODUCTS_PENDING","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAILURE","UPDATE_CART","CHECKOUT","SET_DELIVERY_CHOICE","getProducts","addOrder","returnProductsArrays","items","TwoDimensionalArray","remainder","length","i","array","slice","push","getProductsPending","type","getProductsSuccess","data","payload","getProductsFailure","error","addToCart","product","updateCart","id","quantity","setDelivery","choice","removeFromCart","checkout","setPage","index","fetchProducts","dispatch","then","response","productsData","catch","err","saveOrder","order","console","log"],"mappings":"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","sourcesContent":["import {\n  ADD_TO_CART,\n  REMOVE_FROM_CART,\n  SET_PAGE_INDEX,\n  GET_PRODUCTS_PENDING,\n  GET_PRODUCTS_SUCCESS,\n  GET_PRODUCTS_FAILURE,\n  UPDATE_CART,\n  CHECKOUT,\n  SET_DELIVERY_CHOICE,\n} from \"./actionTypes\";\nimport { getProducts, addOrder } from \"../../service/index\";\n\nconst returnProductsArrays = (items) => {\n  let TwoDimensionalArray = [];\n  let remainder = items.length % 9;\n  let i = 0;\n  while (i < items.length - remainder) {\n    let array = items.slice(i, i + 9);\n    TwoDimensionalArray.push(array);\n    i += 9;\n  }\n  const array = items.slice(i);\n  TwoDimensionalArray.push(array);\n  return TwoDimensionalArray;\n};\n\nexport function getProductsPending() {\n  return {\n    type: GET_PRODUCTS_PENDING,\n  };\n}\nexport function getProductsSuccess(data) {\n  return {\n    type: GET_PRODUCTS_SUCCESS,\n    payload: { data },\n  };\n}\nexport function getProductsFailure(error) {\n  return {\n    type: GET_PRODUCTS_FAILURE,\n    payload: { error },\n  };\n}\nexport function addToCart(product) {\n  return {\n    type: ADD_TO_CART,\n    payload: { product },\n  };\n}\nexport function updateCart(id, quantity) {\n  return {\n    type: UPDATE_CART,\n    payload: { id, quantity },\n  };\n}\nexport function setDelivery(choice) {\n  return {\n    type: SET_DELIVERY_CHOICE,\n    payload: { choice },\n  };\n}\nexport function removeFromCart(id) {\n  return {\n    type: REMOVE_FROM_CART,\n    payload: { id },\n  };\n}\nexport function checkout() {\n  return {\n    type: CHECKOUT,\n  };\n}\nexport function setPage(index) {\n  return {\n    type: SET_PAGE_INDEX,\n    payload: { index },\n  };\n}\n\n// Networking - MongoDB\nexport const fetchProducts = () => {\n  return async function (dispatch) {\n    dispatch(getProductsPending);\n    getProducts()\n      .then((response) => returnProductsArrays(response.data))\n      .then((productsData) => dispatch(getProductsSuccess(productsData)))\n      .catch((err) => dispatch(getProductsFailure(err)));\n  };\n};\n\nexport const saveOrder = (order) => {\n  return async function (dispatch) {\n    addOrder(order)\n      .then(() => dispatch(checkout()))\n      .catch((err) => console.log(err));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}